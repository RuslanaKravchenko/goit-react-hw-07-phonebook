{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/notice/noticeActions.js","redux/contacts/contactsSelectors.js","components/phonebook/contactForm/ContactFormStyled.js","components/phonebook/contactForm/ContactForm.js","redux/modal/modalActions.js","utils/randomRGB.js","components/phonebook/contactList/contactListItem/ContactsListItemStyled.js","components/phonebook/contactList/contactListItem/ContactListItem.js","components/phonebook/contactList/ContactListStyled.js","components/phonebook/contactList/ContactList.js","components/phonebook/filter/FilterStyled.js","components/phonebook/filter/Filter.js","redux/notice/noticeSelectors.js","components/notice/NoticeStyled.js","components/notice/Notice.js","components/phonebook/editProfileForm/EditProfileFormStyled.js","utils/b64.js","components/phonebook/editProfileForm/EditProfileForm.js","redux/modal/modalSelectors.js","components/phonebook/modal/ModalStyled.js","components/phonebook/modal/Modal.js","components/phonebook/contactInfo/ContactInfoStyled.js","components/phonebook/contactInfo/ContactInfo.js","components/phonebook/PhonebookStyled.js","components/loader/LoaderStyled.js","components/loader/Loader.js","components/phonebook/Phonebook.js","components/App.js","redux/contacts/contactsReducer.js","redux/notice/noticeReducer.js","redux/modal/modalReducer.js","redux/store.js","index.js"],"names":["contactsActions","addNewContactRequest","createAction","addNewContactSuccess","addNewContactError","getContactsRequest","getContactsSuccess","getContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","editContactRequest","editContactSuccess","editContactError","setFilter","getIdValue","axios","defaults","baseURL","process","contactsOperations","addNewContact","contact","dispatch","a","post","data","id","name","getContacts","get","contacts","Object","keys","map","key","deleteContact","delete","editContact","newContact","put","showNoticeMessage","hideNoticeMessage","state","phonebookContacts","getFilter","filter","contactsSelectors","getVisibleContacts","createSelector","toLowerCase","includes","getContactId","idValue","getLoading","loading","getError","error","Form","styled","form","initialState","number","connect","message","useState","setNewContact","onHandelChange","e","target","value","prevState","onSubmit","preventDefault","some","item","length","test","className","placeholder","type","onChange","showModal","hideModal","randomRGB","Math","round","random","ListItem","li","content","onClick","currentTarget","avatar","src","alt","toUpperCase","category","xmlns","viewBox","width","height","d","fill","ContactListWrapper","div","TransitionGroup","component","CSSTransition","timeout","classNames","ContactListItem","propTypes","PropTypes","array","FilterFild","autoComplete","getShowNotice","phonebookNotice","showNotice","getNoticeMessage","NoticeWrapper","useEffect","setTimeout","EditProfileStyled","toDataURL","element","Promise","resolve","reader","FileReader","readAsDataURL","files","onloadend","result","dateOfBirth","email","contactById","setContact","onHandleChange","then","getModalIsOpen","phonebookModal","isOpen","getModalContent","Overlay","children","in","appear","unmountOnExit","ContactInfoStyled","ContactInfo","href","Main","main","LoaderWrapper","Spinner","color","isLoadingContacts","onGetContacts","getContactById","find","ContactForm","bool","func","string","App","contactsReducer","createReducer","action","payload","_","contactByIdReducer","filterReducer","errorReducer","addNewContacRequest","loadingReducer","combineReducers","noticeReducer","modalReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b110d8d5.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst addNewContactRequest = createAction('contact/addRequest');\nconst addNewContactSuccess = createAction('contact/addSuccess');\nconst addNewContactError = createAction('contact/addError');\n\nconst getContactsRequest = createAction('contacts/getRequest');\nconst getContactsSuccess = createAction('contacts/getSuccess');\nconst getContactsError = createAction('contacts/getError');\n\nconst deleteContactRequest = createAction('contact/deleteRequest');\nconst deleteContactSuccess = createAction('contact/deleteSuccess');\nconst deleteContactError = createAction('contact/deleteError');\n\nconst editContactRequest = createAction('contact/editRequest');\nconst editContactSuccess = createAction('contact/editSuccess');\nconst editContactError = createAction('contact/editError');\n\nconst setFilter = createAction('contacts/setFilter');\nconst getIdValue = createAction('contacts/getIdValue');\n\nconst contactsActions = {\n  addNewContactRequest,\n  addNewContactSuccess,\n  addNewContactError,\n\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  setFilter,\n  getIdValue,\n};\n\nexport default contactsActions;\n","import axios from 'axios';\nimport contactsActions from './contactsActions';\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\n\nconst addNewContact = contact => async dispatch => {\n  dispatch(contactsActions.addNewContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts.json', contact);\n    dispatch(\n      contactsActions.addNewContactSuccess({ ...contact, id: data.name }),\n    );\n  } catch (error) {\n    dispatch(contactsActions.addNewContactError(error));\n  }\n};\n\nconst getContacts = () => async dispatch => {\n  dispatch(contactsActions.getContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts.json');\n    if (data) {\n      const contacts = Object.keys(data).map(key => ({\n        ...data[key],\n        id: key,\n      }));\n      dispatch(contactsActions.getContactsSuccess(contacts));\n    }\n  } catch (error) {\n    dispatch(contactsActions.getContactsError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}.json`);\n    dispatch(contactsActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error));\n  }\n};\n\nconst editContact = newContact => async dispatch => {\n  dispatch(contactsActions.editContactRequest());\n\n  try {\n    const { data } = await axios.put(\n      `/contacts/${newContact.id}.json`,\n      newContact,\n    );\n\n    dispatch(contactsActions.editContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.editContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  addNewContact,\n  getContacts,\n  deleteContact,\n  editContact,\n};\nexport default contactsOperations;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst showNoticeMessage = createAction('notice/showNoticeMessage');\nconst hideNoticeMessage = createAction('notice/hideNoticeMessage');\n\nexport { showNoticeMessage, hideNoticeMessage };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.phonebookContacts.contacts;\nconst getFilter = state => state.phonebookContacts.filter;\nconst getLoading = state => state.phonebookContacts.loading;\nconst getError = state => state.phonebookContacts.error;\nconst getContactId = state => state.phonebookContacts.idValue;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getVisibleContacts,\n  getContactId,\n  getFilter,\n  getLoading,\n  getError,\n};\n\nexport default contactsSelectors;\n","import styled from 'styled-components';\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  .form_fild {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n\n    &:nth-child(2) {\n      margin-bottom: 30px;\n    }\n  }\n\n  .form_text {\n    margin-bottom: 5px;\n    font-size: 18px;\n    color: #076c77;\n  }\n\n  .form_input {\n    height: 46px;\n    padding: 5px 20px;\n    border-radius: 10px;\n\n    outline: none;\n    &:focus,\n    &:hover {\n      border-color: #c97ddf;\n      box-shadow: 5px 5px 8px -4px rgba(117, 52, 210, 0.33);\n    }\n  }\n\n  .form_btn {\n    margin: 0 auto 40px;\n    width: 200px;\n    height: 50px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #fff;\n    background-color: #7915c5;\n    border-color: #7915c5;\n\n    border-radius: 5px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &:focus,\n    &:hover {\n      color: #7915c5;\n      background-color: #fff;\n      border: 2px solid #883dc7f2;\n      box-shadow: 6px 8px 18px 3px rgba(98, 46, 150, 0.23);\n\n      outline: none;\n    }\n  }\n`;\nexport default Form;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\nimport { showNoticeMessage } from '../../../redux/notice/noticeActions';\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\n\nimport Form from './ContactFormStyled';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ addNewContact, contacts, showNoticeMessage }) => {\n  const [newContact, setNewContact] = useState({ ...initialState });\n\n  const onHandelChange = e => {\n    const { name, value } = e.target;\n    setNewContact(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const onHandelSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(item => item.name === newContact.name)) {\n      showNoticeMessage(`${newContact.name} is already in contacts`);\n      return;\n    }\n    if (contacts.some(item => item.number === newContact.number)) {\n      showNoticeMessage(`${newContact.number} is already in use`);\n      return;\n    }\n\n    if (!newContact.name.length) {\n      showNoticeMessage('Please enter a name');\n      return;\n    }\n\n    if (!newContact.number.length) {\n      showNoticeMessage('Please enter a number');\n      return;\n    }\n    const regex = /^(\\+38|7|8)?[\\s-]?\\(?[0][0-9]{2}\\)?[\\s-]?[0-9]{3}[\\s-]?[0-9]{2}[\\s-]?[0-9]{2}$/;\n\n    if (!regex.test(newContact.number)) {\n      showNoticeMessage('Рlease enter the correct phone number');\n      return;\n    }\n\n    addNewContact(newContact);\n\n    if (newContact.name && newContact.number) {\n      setNewContact({ ...initialState });\n    }\n  };\n\n  return (\n    <Form onSubmit={onHandelSubmit}>\n      <label className=\"form_fild\">\n        <span className=\"form_text\">Name: </span>\n        <input\n          className=\"form_input\"\n          placeholder=\"Enter name...\"\n          type=\"text\"\n          name=\"name\"\n          value={newContact.name}\n          onChange={onHandelChange}\n        ></input>\n      </label>\n      <label className=\"form_fild\">\n        <span className=\"form_text\">Number: </span>\n        <input\n          className=\"form_input\"\n          placeholder=\"+38(067)-111-11-11\"\n          type=\"tel\"\n          name=\"number\"\n          value={newContact.number}\n          onChange={onHandelChange}\n        ></input>\n      </label>\n      <button className=\"form_btn\" type=\"submit\">\n        Add contact\n      </button>\n    </Form>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewContact: newContact =>\n      dispatch(contactsOperations.addNewContact(newContact)),\n    showNoticeMessage: message => dispatch(showNoticeMessage(message)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  addNewContact: PropTypes.func,\n  showNoticeMessage: PropTypes.func,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst showModal = createAction('notice/showModal');\nconst hideModal = createAction('notice/hideModal');\n\nexport { showModal, hideModal };\n","const randomRGB = () => {\n  return `rgba(\n      ${Math.round(Math.random() * 255)},\n      ${Math.round(Math.random() * 255)},\n      ${Math.round(Math.random() * 255)},0.4\n    )`;\n};\nexport default randomRGB;\n","import styled from 'styled-components';\nimport randomRGB from '../../../../utils/randomRGB';\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 5px 5px 10px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  &:hover {\n    background-color: #f8f4fa;\n    border: 1px solid #a75ee1;\n    box-shadow: 5px 5px 11px 2px rgba(143, 108, 193, 0.45);\n  }\n\n  .listItem_meta {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    cursor: pointer;\n\n    @media (min-width: 768px) {\n      position: relative;\n    }\n\n    &-info {\n      margin-left: 15px;\n    }\n  }\n  .listItem_name {\n    display: flex;\n    font-size: 18px;\n    font-weight: 700;\n    margin-bottom: 3px;\n  }\n\n  .listItem_number {\n    font-size: 14px;\n    color: #4b4e4f;\n  }\n\n  .listItem_category {\n    padding: 3px 7px;\n    width: max-content;\n    font-size: 12px;\n    color: #083e2d;\n    border: 1px solid #19b785;\n    border-radius: 15px;\n    @media (max-width: 767px) {\n      margin-top: 3px;\n    }\n\n    @media (min-width: 768px) {\n      position: absolute;\n      top: 50%;\n      right: 10px;\n      transform: translate(0, -50%);\n    }\n  }\n  .listItem_btn {\n    width: 40px;\n    height: 40px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background-color: transparent;\n\n    &:focus .listItem_icon,\n    &:hover .listItem_icon {\n      fill: #0b858b;\n    }\n  }\n  .listItem_icon {\n    fill: #7c8181;\n  }\n\n  .avatar_span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50px;\n    height: 50px;\n    font-size: 26px;\n    font-weight: 700;\n    background-color: ${randomRGB};\n    border-radius: 50%;\n  }\n\n  .avatar_container {\n    width: 50px;\n    height: 50px;\n    overflow: hidden;\n    border-radius: 50%;\n  }\n\n  .avatar_img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\nexport default ListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsActions from '../../../../redux/contacts/contactsActions';\nimport contactsOperations from '../../../../redux/contacts/contactsOperations';\nimport contactsSelectors from '../../../../redux/contacts/contactsSelectors';\n\nimport { showModal } from '../../../../redux/modal/modalActions';\n\nimport ListItem from './ContactsListItemStyled';\n\nconst ContactListItem = ({\n  contact,\n  deleteContact,\n  showModal,\n  getIdValue,\n  setFilter,\n  contacts,\n}) => {\n  const onHandleDelete = e => {\n    const { id } = e.currentTarget;\n    deleteContact(id);\n\n    if (contacts.length < 2) {\n      setFilter('');\n    }\n  };\n\n  const openEditProfile = e => {\n    showModal('openEditProfile');\n    const { id } = e.currentTarget;\n    getIdValue(id);\n  };\n\n  const openContactInfo = e => {\n    showModal('openContactInfo');\n    const { id } = e.currentTarget;\n    getIdValue(id);\n  };\n\n  return (\n    <ListItem>\n      <div className=\"listItem_meta\" id={contact.id} onClick={openContactInfo}>\n        {contact.avatar ? (\n          <div className=\"avatar_container\">\n            <img className=\"avatar_img\" src={contact.avatar} alt=\"avatar\" />\n          </div>\n        ) : (\n          <span className=\"avatar_span\">{contact.name[0].toUpperCase()}</span>\n        )}\n        <div className=\"listItem_meta-info\">\n          <h3 className=\"listItem_name\">{contact.name} </h3>\n\n          <p className=\"listItem_number\">{contact.number}</p>\n          {contact.category && (\n            <p className=\"listItem_category\">{contact.category}</p>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <button\n          type=\"button\"\n          className=\"material-icons listItem_btn\"\n          id={contact.id}\n          onClick={openEditProfile}\n        >\n          <svg\n            className=\"listItem_icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width=\"25px\"\n            height=\"25px\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" />\n          </svg>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"material-icons listItem_btn\"\n          id={contact.id}\n          onClick={onHandleDelete}\n        >\n          <svg\n            className=\"listItem_icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width=\"25px\"\n            height=\"25px\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\" />\n          </svg>\n        </button>\n      </div>\n    </ListItem>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteContact: id => {\n      dispatch(contactsOperations.deleteContact(id));\n    },\n\n    showModal: content => {\n      dispatch(showModal(content));\n    },\n    getIdValue: id => {\n      dispatch(contactsActions.getIdValue(id));\n    },\n    setFilter: value => {\n      dispatch(contactsActions.setFilter(value));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n\nContactListItem.propTypes = {\n  contact: PropTypes.object,\n  deleteContact: PropTypes.func,\n  showModal: PropTypes.func,\n  getContactById: PropTypes.func,\n};\n","import styled from 'styled-components';\nconst ContactListWrapper = styled.div`\n  padding: 10px 0;\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  .list-item-enter {\n    opacity: 0;\n    transform: translateY(-100%);\n  }\n  .list-item-enter-active {\n    opacity: 1;\n    transform: translateY(0);\n    transition: all 250ms;\n  }\n  .list-item-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  .list-item-exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: all 250ms;\n  }\n`;\nexport default ContactListWrapper;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './contactListItem/ContactListItem';\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactListWrapper from './ContactListStyled';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ContactListWrapper>\n      <TransitionGroup component=\"ul\" className=\"list\">\n        {contacts.map(item => (\n          <CSSTransition key={item.id} timeout={250} classNames=\"list-item\">\n            <ContactListItem contact={item} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ContactListWrapper>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n\nContactListItem.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\nconst FilterFild = styled.div`\n  margin-bottom: 20px;\n  .filter_input {\n    display: block;\n    margin: 0 auto;\n    padding: 5px 20px;\n    height: 40px;\n    width: 100%;\n    max-width: 400px;\n    border-radius: 10px;\n\n    outline: none;\n    &:focus,\n    &:hover {\n      border-color: #c97ddf;\n      box-shadow: 5px 5px 8px -4px rgba(117, 52, 210, 0.33);\n    }\n  }\n`;\nexport default FilterFild;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsActions from '../../../redux/contacts/contactsActions';\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\n\nimport FilterFild from './FilterStyled';\n\nconst Filter = ({ filter, setFilter }) => {\n  const onHandleChange = e => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  return (\n    <FilterFild>\n      <input\n        className=\"filter_input\"\n        placeholder=\"Find by name...\"\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n      />\n    </FilterFild>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: contactsSelectors.getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilter: value => {\n      dispatch(contactsActions.setFilter(value));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func,\n};\n","const getShowNotice = state => state.phonebookNotice.showNotice;\nconst getNoticeMessage = state => state.phonebookNotice.message;\n\nexport { getShowNotice, getNoticeMessage };\n","import styled from 'styled-components';\nconst NoticeWrapper = styled.div`\n  padding: 20px;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background-color: #ffff78fa;\n  width: 280px;\n  min-height: 60px;\n  border-radius: 5px;\n  .text {\n    font-size: 16px;\n  }\n`;\nexport default NoticeWrapper;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { hideNoticeMessage } from '../../redux/notice/noticeActions';\nimport { getNoticeMessage } from '../../redux/notice/noticeSelectors';\n\nimport NoticeWrapper from './NoticeStyled';\n\nconst Notice = ({ message, hideNoticeMessage }) => {\n  useEffect(() => {\n    setTimeout(() => {\n      hideNoticeMessage();\n    }, 3000);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <NoticeWrapper>\n      <p className=\"text\">{message}</p>\n    </NoticeWrapper>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    message: getNoticeMessage(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideNoticeMessage: () => {\n      dispatch(hideNoticeMessage());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notice);\n\nNotice.propTypes = {\n  message: PropTypes.string,\n  hideNoticeMessage: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport randomRGB from '../../../utils/randomRGB';\n\nconst EditProfileStyled = styled.div`\n  padding: 30px 15px;\n\n  @media (min-width: 768px) {\n    padding: 30px 40px;\n  }\n\n  .profile_title {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n\n  .profile_form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .profile_fild {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    &-category {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n    }\n    &-date {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n      align-items: center;\n      margin-bottom: 20px;\n    }\n  }\n\n  .profile_text {\n    margin-bottom: 5px;\n    font-size: 18px;\n    color: #076c77;\n  }\n\n  .profile_input {\n    width: 100%;\n    height: 46px;\n    padding: 5px 20px;\n    border-radius: 10px;\n\n    outline: none;\n    &:focus,\n    &:hover {\n      border-color: #c97ddf;\n      box-shadow: 5px 5px 8px -4px rgba(117, 52, 210, 0.33);\n    }\n  }\n\n  .profile_category-text,\n  .profile_date-text {\n    font-size: 16px;\n    color: #076c77;\n  }\n\n  .profile_category-select {\n    width: 150px;\n  }\n  .select-css {\n    display: block;\n    font-size: 16px;\n    font-family: sans-serif;\n    color: #444;\n    line-height: 1.3;\n    padding: 5px 10px;\n    width: 150px;\n\n    margin: 0;\n    border: 1px solid #aaa;\n    box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n    border-radius: 10px;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    appearance: none;\n    background-color: #fff;\n    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\n      linear-gradient(to bottom, #ffffff 0%, #c7f3ec 100%);\n    background-repeat: no-repeat, repeat;\n    background-position: right 0.7em top 50%, 0 0;\n    background-size: 0.65em auto, 100%;\n    cursor: pointer;\n  }\n\n  .select-css:hover,\n  .select-css:focus {\n    border-color: #c97ddf;\n    box-shadow: 5px 5px 8px -4px rgba(117, 52, 210, 0.33);\n\n    color: #222;\n    outline: none;\n  }\n\n  .profile_date {\n    text-align: center;\n    width: 220px;\n    padding: 5px 10px;\n    border: 1px solid #aaa;\n    box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n    border-radius: 10px;\n    background-image: linear-gradient(to bottom, #ffffff 0%, #c7f3ec 100%);\n    cursor: pointer;\n\n    outline: none;\n    &:focus,\n    &:hover {\n      border-color: #c97ddf;\n      box-shadow: 5px 5px 8px -4px rgba(117, 52, 210, 0.33);\n    }\n  }\n  .info_btn {\n    margin: 0 auto;\n\n    width: 150px;\n    height: 40px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #fff;\n    background-color: #7915c5;\n    border-color: #7915c5;\n\n    border-radius: 5px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &:focus,\n    &:hover {\n      color: #7915c5;\n      background-color: #fff;\n      border: 2px solid #883dc7f2;\n      box-shadow: 6px 8px 18px 3px rgba(98, 46, 150, 0.23);\n\n      outline: none;\n    }\n  }\n\n  .avatar_fild {\n    position: relative;\n    margin: 0 auto;\n    width: 80px;\n  }\n\n  .avatar_label {\n    display: block;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n\n  .avatar_input {\n    display: none;\n  }\n\n  .avatar_span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 80px;\n    height: 80px;\n    font-size: 26px;\n    font-weight: 700;\n    background-color: ${randomRGB};\n    border-radius: 50%;\n  }\n\n  .avatar_container {\n    width: 80px;\n    height: 80px;\n    overflow: hidden;\n    border-radius: 50%;\n  }\n\n  .avatar_img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .avatar_icon {\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .avatar_btn {\n    position: absolute;\n    top: -10px;\n    right: -10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 30px;\n    height: 30px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      outline: none;\n\n      & .avatar_icon {\n        fill: #7c41c5;\n      }\n    }\n  }\n`;\nexport default EditProfileStyled;\n","function toDataURL(element) {\n  return new Promise(resolve => {\n    const reader = new FileReader();\n    reader.readAsDataURL(element.files[0]);\n    reader.onloadend = () => resolve(reader.result);\n  });\n}\n\nexport default toDataURL;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\n\nimport { hideModal } from '../../../redux/modal/modalActions';\n\nimport EditProfileStyled from './EditProfileFormStyled';\nimport toDataURL from '../../../utils/b64';\n\nconst initialState = {\n  name: '',\n  number: '',\n  category: '',\n  dateOfBirth: '',\n  email: '',\n  avatar: '',\n};\n\nconst EditProfileForm = ({ contactById, editContact, hideModal }) => {\n  const [contact, setContact] = useState({ ...initialState, ...contactById });\n\n  const onHandleChangeAvatar = e => {\n    toDataURL(e.target).then(data => setContact({ ...contact, avatar: data }));\n  };\n\n  const onHandleChange = e => {\n    const { name, value } = e.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  const onHadleSubmit = e => {\n    e.preventDefault();\n    editContact(contact);\n    hideModal();\n  };\n\n  const onHadleClick = () => {\n    contact.avatar && setContact({ ...contact, avatar: '' });\n    return;\n  };\n\n  return (\n    <EditProfileStyled>\n      <form className=\"profile_form\" onSubmit={onHadleSubmit}>\n        <div className=\"avatar_fild\">\n          <label className=\"avatar_label\">\n            <input\n              type=\"file\"\n              name=\"avatar\"\n              className=\"avatar_input\"\n              onChange={onHandleChangeAvatar}\n            />\n\n            {contact.avatar ? (\n              <div className=\"avatar_container\">\n                <img className=\"avatar_img\" src={contact.avatar} alt=\"avatar\" />\n              </div>\n            ) : (\n              <span className=\"avatar_span\">\n                {contact.name[0].toUpperCase()}{' '}\n              </span>\n            )}\n          </label>\n\n          {contact.avatar && (\n            <button className=\"avatar_btn\" type=\"button\" onClick={onHadleClick}>\n              <svg\n                className=\"avatar_icon\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                width=\"20px\"\n                height=\"20px\"\n              >\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n              </svg>\n            </button>\n          )}\n        </div>\n\n        <label className=\"profile_fild\">\n          <span className=\"profile_text\"> Name:</span>\n\n          <input\n            className=\"profile_input\"\n            type=\"text\"\n            name=\"name\"\n            value={contact.name}\n            onChange={onHandleChange}\n          />\n        </label>\n        <label className=\"profile_fild\">\n          <span className=\"profile_text\">Number:</span>\n\n          <input\n            className=\"profile_input\"\n            type=\"tel\"\n            name=\"number\"\n            value={contact.number}\n            onChange={onHandleChange}\n          />\n        </label>\n\n        <label className=\"profile_fild\">\n          <span className=\"profile_text\">Email:</span>\n\n          <input\n            className=\"profile_input\"\n            type=\"email\"\n            name=\"email\"\n            value={contact.email}\n            onChange={onHandleChange}\n          />\n        </label>\n\n        <label className=\"profile_fild-category\">\n          <span className=\"profile_category-text\">Category:</span>\n\n          <select\n            className=\"select-css\"\n            name=\"category\"\n            value={contact.category}\n            onChange={onHandleChange}\n          >\n            <option value=\"\">...</option>\n            <option value=\"family\">Family</option>\n            <option value=\"friends\">Friends</option>\n            <option value=\"work\">Work</option>\n            <option value=\"others\">Others</option>\n          </select>\n        </label>\n        <label className=\"profile_fild-date\">\n          <span className=\"profile_date-text\">Date of birth:</span>\n\n          <input\n            className=\"profile_date\"\n            type=\"date\"\n            name=\"dateOfBirth\"\n            value={contact.dateOfBirth}\n            onChange={onHandleChange}\n          ></input>\n        </label>\n\n        <button className=\"info_btn \" type=\"submit\">\n          Save\n        </button>\n      </form>\n    </EditProfileStyled>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editContact: contact => {\n      dispatch(contactsOperations.editContact(contact));\n    },\n\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\n\nEditProfileForm.propTypes = {\n  contactById: PropTypes.object,\n  editContact: PropTypes.func,\n  hideModal: PropTypes.func,\n};\n","const getModalIsOpen = state => state.phonebookModal.isOpen;\nconst getModalContent = state => state.phonebookModal.content;\n\nexport { getModalIsOpen, getModalContent };\n","import styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  .Modal {\n    position: relative;\n    background-color: #fff;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 24px);\n\n    @media (min-width: 768px) {\n      max-width: 600px;\n    }\n  }\n\n  .modal_icon {\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .modal_btn {\n    position: absolute;\n    top: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      outline: none;\n\n      & .modal_icon {\n        fill: #7c41c5;\n      }\n    }\n  }\n\n  /* ================ animations =========== */\n\n  .modal-appear {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  .modal-appear-active {\n    opacity: 1;\n    transform: scale(1);\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .modal-exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n  .modal-exit-active {\n    opacity: 0;\n    transform: scale(0.8);\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport default Overlay;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { hideModal } from '../../../redux/modal/modalActions';\nimport { getModalIsOpen } from '../../../redux/modal/modalSelectors';\n\nimport { CSSTransition } from 'react-transition-group';\nimport Overlay from './ModalStyled';\n\nconst Modal = ({ children, hideModal, isOpen }) => {\n  const onHadleClick = () => {\n    hideModal();\n  };\n\n  return (\n    <Overlay>\n      <CSSTransition\n        in={isOpen}\n        appear={true}\n        timeout={300}\n        classNames=\"modal\"\n        unmountOnExit\n      >\n        <div className=\"Modal\">\n          {children}\n          <button className=\"modal_btn\" onClick={onHadleClick} type=\"button\">\n            <svg\n              className=\"modal_icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              width=\"24px\"\n              height=\"24px\"\n            >\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n            </svg>\n          </button>\n        </div>\n      </CSSTransition>\n    </Overlay>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: getModalIsOpen(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  hideModal: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport randomRGB from '../../../utils/randomRGB';\n\nconst ContactInfoStyled = styled.div`\n  padding: 40px 30px;\n\n  @media (min-width: 768px) {\n    padding: 30px 50px;\n  }\n\n  .info_name {\n    margin-bottom: 5px;\n  }\n\n  .info_category {\n    padding: 3px 7px;\n    width: max-content;\n    font-size: 14px;\n    color: #19b785;\n    border: 1px solid #19b785;\n    border-radius: 15px;\n  }\n\n  .info_list {\n    margin-top: 30px;\n    margin-bottom: 20px;\n  }\n\n  .info_item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:not(:last-child) {\n      margin-bottom: 10px;\n    }\n  }\n  .info_dots {\n    display: block;\n    flex-grow: 1;\n    height: 14px;\n    border-bottom: 2px dotted #eff5f4;\n  }\n  .info_label {\n    font-size: 16px;\n    color: #4b4e4f;\n  }\n\n  .info_contact {\n    font-size: 14px;\n  }\n  .info_dateOfBirth {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 40px;\n  }\n\n  .info_dateOfBirth-label {\n    font-size: 16px;\n    color: #4b4e4f;\n  }\n\n  .info_dateOfBirth-date {\n    font-size: 14px;\n  }\n  .info_links {\n    display: flex;\n    justify-content: center;\n  }\n\n  .info_link {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n\n    width: 150px;\n    height: 40px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #fff;\n    background-color: #7915c5;\n    border-color: #7915c5;\n\n    border-radius: 5px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &:focus,\n    &:hover {\n      color: #7915c5;\n      background-color: #fff;\n      border: 2px solid #883dc7f2;\n      box-shadow: 6px 8px 18px 3px rgba(98, 46, 150, 0.23);\n\n      outline: none;\n    }\n  }\n  .info_call {\n    margin-right: 15px;\n  }\n\n  .disabled {\n    pointer-events: none;\n    cursor: default;\n    background-color: grey;\n  }\n\n  .info_header-container {\n    display: flex;\n    justify-content: space-between;\n  }\n  .avatar_span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 80px;\n    height: 80px;\n    font-size: 26px;\n    font-weight: 700;\n    background-color: ${randomRGB};\n    border-radius: 50%;\n  }\n\n  .avatar_container {\n    width: 80px;\n    height: 80px;\n    overflow: hidden;\n    border-radius: 50%;\n  }\n\n  .avatar_img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\nexport default ContactInfoStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactInfoStyled from './ContactInfoStyled';\n\nconst ContactInfo = ({ contactById }) => {\n  const { name, number, email, category, dateOfBirth, avatar } = contactById;\n  return (\n    <ContactInfoStyled>\n      <div className=\"info_header-container\">\n        <div>\n          <h2 className=\"info_name\">{name}</h2>\n          {category && <p className=\"info_category\">{category}</p>}\n        </div>\n\n        {avatar ? (\n          <div className=\"avatar_container\">\n            <img className=\"avatar_img\" src={avatar} alt=\"avatar\" />\n          </div>\n        ) : (\n          <span className=\"avatar_span\">{name[0].toUpperCase()} </span>\n        )}\n      </div>\n\n      <ul className=\"list info_list\">\n        <li className=\"info_item\">\n          <span className=\"info_label\">Number:</span>\n          <span className=\"info_dots\"></span>\n          <span className=\"info_contact\">{number}</span>\n        </li>\n        <li className=\"info_item\">\n          <span className=\"info_label\">Email:</span>\n          <span className=\"info_dots\"></span>\n          <span className=\"info_contact\">{email}</span>\n        </li>\n      </ul>\n      <p className=\"info_dateOfBirth\">\n        <span className=\"info_dateOfBirth-label\">Date of birth:</span>\n        <span className=\"info_dots\"></span>\n        <span className=\"info_dateOfBirth-date\">{dateOfBirth}</span>\n      </p>\n\n      <div className=\"info_links\">\n        <a className=\"info_call info_link\" href={`tel:${number}`}>\n          Call\n        </a>\n\n        <a\n          className={`info_link  ${!email && 'disabled'} `}\n          href={`mailto:${email}`}\n        >\n          Message\n        </a>\n      </div>\n    </ContactInfoStyled>\n  );\n};\n\nexport default ContactInfo;\n\nContactInfo.propTypes = {\n  contactById: PropTypes.object,\n};\n","import styled from 'styled-components';\nconst Main = styled.main`\n  @media (min-width: 768px) {\n    margin: 0 auto;\n    max-width: 400px;\n  }\n  @media (min-width: 1280px) {\n    margin: 0 auto;\n    max-width: 700px;\n  }\n\n  .phonebook_title {\n    color: #0d5667;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n\n  .contacts_title {\n    color: #286671;\n    margin-bottom: 20px;\n    text-align: center;\n  }\n\n  .contacts_text {\n    padding: 0 10px;\n    text-align: center;\n    color: #464b51;\n  }\n\n  /* ================ animations =========== */\n\n  .title-appear {\n    opacity: 0;\n    transform: translateY(-100%);\n  }\n\n  .title-appear-active {\n    opacity: 1;\n    transform: translateY(0);\n    transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .form-appear {\n    opacity: 0;\n  }\n\n  .form-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 100ms;\n  }\n\n  .contactsTitle-appear {\n    opacity: 0;\n  }\n\n  .contactsTitle-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 200ms;\n  }\n\n  .filter-appear {\n    opacity: 0;\n  }\n\n  .filter-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 200ms;\n  }\n\n  .contactsList-appear {\n    opacity: 0;\n  }\n\n  .contactsList-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n  }\n\n  .contactsText-appear {\n    opacity: 0;\n  }\n\n  .contactsText-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n  }\n\n  .my-notice-enter {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n  .my-notice-enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .my-notice-exit {\n    opacity: 1;\n    transform: translateX(0);\n  }\n  .my-notice-exit-active {\n    opacity: 0;\n    transform: translateX(100%);\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .modal-appear {\n    opacity: 0;\n  }\n  .modal-appear-active {\n    opacity: 1;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .modal-exit {\n    opacity: 1;\n  }\n  .modal-exit-active {\n    opacity: 0;\n    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport default Main;\n","import styled from 'styled-components';\nconst LoaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  pointer-events: initial;\n`;\nexport default LoaderWrapper;\n","import Loader from 'react-loader-spinner';\nimport LoaderWrapper from './LoaderStyled';\n\nconst Spinner = () => {\n  return (\n    <LoaderWrapper>\n      <Loader type=\"ThreeDots\" color=\"#7915c5\" height={80} width={80} />\n    </LoaderWrapper>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\n\nimport Notice from '../notice/Notice';\nimport EditProfileForm from './editProfileForm/EditProfileForm';\nimport Modal from './modal/Modal';\nimport ContactInfo from './contactInfo/ContactInfo';\n\nimport contactsOperations from '../../redux/contacts/contactsOperations';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport {\n  getModalContent,\n  getModalIsOpen,\n} from '../../redux/modal/modalSelectors';\nimport { getShowNotice } from '../../redux/notice/noticeSelectors';\n\nimport { CSSTransition } from 'react-transition-group';\nimport Main from './PhonebookStyled';\nimport Spinner from '../loader/Loader';\n\nconst Phonebook = ({\n  contacts,\n  onGetContacts,\n  showNotice,\n  isOpen,\n  content,\n  idValue,\n  isLoadingContacts,\n}) => {\n  useEffect(() => {\n    onGetContacts();\n\n    // eslint-disable-next-line\n  }, []);\n\n  const getContactById = idValue => {\n    const contactById = contacts.find(contact => contact.id === idValue);\n    return contactById;\n  };\n\n  return (\n    <>\n      {isLoadingContacts && <Spinner />}\n      <Main>\n        <CSSTransition\n          in={showNotice}\n          timeout={250}\n          classNames=\"my-notice\"\n          unmountOnExit\n        >\n          <Notice />\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title\"\n          unmountOnExit\n        >\n          <h1 className=\"phonebook_title\">Phonebook</h1>\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={400}\n          classNames=\"form\"\n          unmountOnExit\n        >\n          <ContactForm />\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"contactsTitle\"\n          unmountOnExit\n        >\n          <>\n            <h2 className=\"contacts_title\">Contacts</h2>\n            {contacts.length > 1 && (\n              <CSSTransition\n                in={true}\n                appear={true}\n                timeout={500}\n                classNames=\"filter\"\n                unmountOnExit\n              >\n                <Filter />\n              </CSSTransition>\n            )}\n          </>\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={550}\n          classNames=\"contactsList\"\n          unmountOnExit\n        >\n          <ContactList />\n        </CSSTransition>\n\n        {contacts.length === 0 && (\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={550}\n            classNames=\"contactsText\"\n            unmountOnExit\n          >\n            <p className=\"contacts_text\">\n              Your phone book is empty. Please add a contact.\n            </p>\n          </CSSTransition>\n        )}\n\n        <CSSTransition\n          in={isOpen}\n          appear={true}\n          timeout={300}\n          classNames=\"modal\"\n          unmountOnExit\n        >\n          <Modal>\n            {content === 'openEditProfile' && (\n              <EditProfileForm contactById={getContactById(idValue)} />\n            )}\n\n            {content === 'openContactInfo' && (\n              <ContactInfo contactById={getContactById(idValue)} />\n            )}\n          </Modal>\n        </CSSTransition>\n      </Main>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getContacts(state),\n    idValue: contactsSelectors.getContactId(state),\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    showNotice: getShowNotice(state),\n    isOpen: getModalIsOpen(state),\n    content: getModalContent(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetContacts: () => {\n      dispatch(contactsOperations.getContacts());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n\nContactForm.propTypes = {\n  showNotice: PropTypes.bool,\n  contacts: PropTypes.array,\n  getContacts: PropTypes.func,\n  isOpen: PropTypes.bool,\n  content: PropTypes.string,\n  idValue: PropTypes.string,\n  isLoadingContacts: PropTypes.bool,\n};\n","import React from 'react';\nimport Phonebook from './phonebook/Phonebook';\n\nconst App = () => {\n  return <Phonebook />;\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsActions from './contactsActions';\n\nconst getContacts = (_, action) => {\n  return action.payload;\n};\n\nconst addContact = (state, action) => {\n  return [...state, action.payload];\n};\n\nconst deleteContact = (state, action) =>\n  state.filter(item => item.id !== action.payload);\n\nconst onEditContact = (state, action) =>\n  state.map(item =>\n    item.id === action.payload.id ? { ...action.payload } : item,\n  );\n\nconst contactsReducer = createReducer([], {\n  [contactsActions.addNewContactSuccess]: addContact,\n  [contactsActions.getContactsSuccess]: getContacts,\n  [contactsActions.deleteContactSuccess]: deleteContact,\n  [contactsActions.editContactSuccess]: onEditContact,\n});\n\nconst contactByIdReducer = createReducer('', {\n  [contactsActions.getIdValue]: (_, action) => action.payload,\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.setFilter]: (_, action) => action.payload,\n});\n\nconst errorReducer = createReducer(null, {\n  [contactsActions.addNewContactError]: (_, action) => action.payload,\n  [contactsActions.addNewContacRequest]: () => null,\n\n  [contactsActions.getContactsError]: (_, action) => action.payload,\n  [contactsActions.getContactsRequest]: () => null,\n\n  [contactsActions.deleteContactError]: (_, action) => action.payload,\n  [contactsActions.deleteContactRequest]: () => null,\n\n  [contactsActions.editContactError]: (_, action) => action.payload,\n  [contactsActions.editContactRequest]: () => null,\n});\n\nconst loadingReducer = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n\n  [contactsActions.addNewContactRequest]: () => true,\n  [contactsActions.addNewContactSuccess]: () => false,\n  [contactsActions.addNewContactError]: () => false,\n\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n\n  [contactsActions.editContactRequest]: () => true,\n  [contactsActions.editContactSuccess]: () => false,\n  [contactsActions.editContactError]: () => false,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  idValue: contactByIdReducer,\n  error: errorReducer,\n  loading: loadingReducer,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { showNoticeMessage, hideNoticeMessage } from './noticeActions';\n\nconst initialState = {\n  showNotice: false,\n  message: '',\n};\n\nexport const noticeReducer = createReducer(\n  { ...initialState },\n  {\n    [showNoticeMessage]: (state, action) => ({\n      ...state,\n      showNotice: !state.showNotice,\n      message: action.payload,\n    }),\n    [hideNoticeMessage]: (state, action) => ({\n      ...state,\n      showNotice: !state.showNotice,\n    }),\n  },\n);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { showModal, hideModal } from './modalActions';\n\nconst initialState = {\n  isOpen: false,\n  content: '',\n};\n\nexport const modalReducer = createReducer(\n  { ...initialState },\n  {\n    [showModal]: (state, action) => ({\n      ...state,\n      isOpen: !state.isOpen,\n      content: action.payload,\n    }),\n    [hideModal]: (state, action) => ({ ...state, isOpen: !state.isOpen }),\n  },\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducer';\nimport { noticeReducer } from './notice/noticeReducer';\nimport { modalReducer } from './modal/modalReducer';\n\nconst store = configureStore({\n  reducer: {\n    phonebookContacts: contactsReducer,\n    phonebookNotice: noticeReducer,\n    phonebookModal: modalReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />{' '}\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}